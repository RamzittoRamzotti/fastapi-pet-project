version: '3.8'

services:
  backend:
    container_name: backend
    build:
      context: ./
    env_file: backend/.env
    ports:
      - "5000:5000"
    networks:
      app-network:
        ipv4_address: 172.21.0.2
    depends_on:
      - postgres
      - redis
    volumes:
      - ./frontend/public/images:/app/src/backend/frontend/public/images



  celery:
    container_name: celery
    build:
      context: ./backend
      dockerfile: Dockerfile.celery
    env_file: backend/.env
    links:
      - redis
    networks:
      app-network:
        ipv4_address: 172.21.0.7
    volumes:
      - ./frontend/public/images:/app/src/frontend/public/images
  nginx:
    container_name: nginx
    build:
      context: ./frontend
    ports:
      - "80:80"
    networks:
      app-network:
        ipv4_address: 172.21.0.4

  postgres:
    container_name: postgres
    image: postgres:16.3
    restart: always
    env_file:
      - backend/.env
    ports:
      - "5432:5432"

    networks:
      app-network:
        ipv4_address: 172.21.0.6

  redis:
    container_name: redis
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      app-network:
        ipv4_address: 172.21.0.5

networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/24

volumes:
  frontend-images:
